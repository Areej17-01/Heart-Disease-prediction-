import pickle
import sklearn
from sklearn.preprocessing import StandardScaler
import numpy as np
import json
__locations = None
__data_columns = None
__model = None

def get_estimated_prediction(age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal):
    load_save_artifacts()
    x=[[age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal]]
    x.append([52, 1, 0, 125, 212, 0, 1, 168, 0, 1.0, 2, 2, 3])
    x.append([62, 0, 0, 138, 294, 1, 1, 106, 0, 1.9, 1, 3, 2])
    if x[0][1]=="Male":
        x[0][1]=int(1)
    if x[0][1]=="Female":
        x[0][1]=int(0)
    #x.append([52,1,0,125,212,0,1,168,0,1.0,2,2,3])
    #x.append([62,0,0,138,294,1,1,106,0,1.9,1,3,2])

    scaler = StandardScaler()
    x = scaler.fit_transform(x)
    value=__model.predict(x)
    if value[0]==1:
       # print(x)
        return ("you may have heart disease")
    elif value[0]==0:
        return ("you don't have any heart disease")
    #return __model.predict([x])



def load_save_artifacts():
    print("loading artifact..............start")
    global __data_columns
    global __location

    with open('./artifacts/columns.json','r') as f:
        __data_columns=json.load(f)['data_columns']
        __location=__data_columns

    global __model
    if __model is None:
        with open('./artifacts/model_knn.pickle','rb') as f:
            __model=pickle.load(f)
    print("loading saved artifacts........done")


def get_data_columns():
    load_save_artifacts()
    return __data_columns

def get_location_names():
    load_save_artifacts()
    #print(__location)
    return __location

if __name__ == "__main__":

    load_save_artifacts()
    print(get_location_names())
    print(get_estimated_prediction(54,"Male",1,192,283,0,0,195,0,0.0,2,1,3))
    print(get_estimated_prediction(62,"Female",0,138,294,1,1,106,0,1.9,1,3,2))
    print(get_estimated_prediction(53,"Male",0,140,203,1,0,155,1,3.1,0,0,3))



